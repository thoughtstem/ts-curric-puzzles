#lang racket

;Rewards are basically functions that take a phrase
;  (a phrase is passed into these functions into separate parameters,
;    top and bottom)

;Phrases can be generated by the phrase functions.  They are returned as lists.

(provide normal-reward
         funny-reward
         serious-reward
         
         funny-phrase
         serious-phrase)

(require
  2htdp/image
  "./creature-congratulations.rkt"
  "./memes.rkt"
  "./brains.rkt"  
  "./phrases.rkt")



(define (creature top bottom)
  (creature-congratulations
   (~a top "\n\n" bottom "\n\nsrsly!!")))

(define funny-fs
  (list
   xena
   fry
   picard
   creature))

(define serious-fs
  (list
   brain-quote))

(define (funny-reward top bottom)
  (define funny-f
    (list-ref funny-fs (random (length funny-fs))))
  
  (funny-f top bottom))

(define (serious-reward top bottom)
  (define serious-f
    (list-ref serious-fs (random (length serious-fs))))
  
  (serious-f top bottom))

(define (normal-reward top bottom)
  (above/align 'left
   (text top 24 'black)
   (square 10 'solid 'transparent)
   (text bottom 24 'black)))


(define (funny-phrase)
  (define top
    (~a "my " (opinion) "????"))

  (define p
    (match (random 2)
      [0 (positive-phrase)]
      [1 (very-positive-phrase)]))
  
  (define bottom
    (~a p "!!!"))

  (list top bottom))


(define (serious-phrase)
  (define p (growth-mindset-phrase))

  (define parts (string-split p " "))


  (define h (floor (/ (length parts) 2)))


  (if (> 5 (length parts))
      (list p "")
      (list (string-join (take parts h) " ")
            (string-join (drop parts h) " "))))

